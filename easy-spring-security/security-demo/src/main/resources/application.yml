server:
  port: 8080
spring:
  # 使用的配置文件
  profiles:
    active: summer
  # 数据源配置
  datasource:
    # 使用阿里连接池
    druid:
      # 用户名
      username: ${easy-spring.mysql.username}
      # 连接地址
      url: jdbc:mysql://${easy-spring.mysql.server-host}:${easy-spring.mysql.port}/${easy-spring.mysql.database}?characterEncoding=utf-8&useSSL=false
      #      url: jdbc:mysql://localhost:3306/activiti_demo?characterEncoding=utf-8&useSSL=false
      # 密码
      password: ${easy-spring.mysql.password}
      # [自动是被] 连接驱动, 这一项可配可不配，如果不配置druid会根据url自动识别dbType，然后选择相应的driverClassName
      # driver-class-name: com.mysql.jdbc.Driver 此驱动类已过期, 且手动加载没有必要
      # [0] 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 5
      # [8] 最大连接池数量
      max-active: 15
      # [] 最小连接池数量
      min-idle: 5
      # 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，
      # 如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      # max-wait:
      # [false] 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      pool-prepared-statements: false
      # [-1] 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      # 在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      # max-pool-prepared-statement-per-connection-size:
      # #和上面的等价
      # max-open-prepared-statements:
      # 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
      # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: SELECT 1 FROM DUAL
      # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 30
      # [true] 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: true
      # [false] 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # [false] 建议配置为true，不影响性能，并且保证安全性。
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # [一分钟] 有两个含义：
      # 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。
      # 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
      # time-between-eviction-runs-millis:
      # 连接保持空闲而不被驱逐的最小时间
      # min-evictable-idle-time-millis:
      # 产考上一条
      # max-evictable-idle-time-millis:
      # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      # 配置多个英文逗号分隔
      filters: stat,wall

      # 监控配置 WebStatFilter配置  说明请参考Druid Wiki，配置_配置WebStatFilter
      web-stat-filter:
        # [true] 是否启用StatFilter
        enabled: true
        url-pattern: /*
        # 经常需要排除一些不必要的url，比如*.js,/jslib/*等等
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        # 你可以关闭session统计功能
        session-stat-enable: true
        # [1000] 你可以按需要进行配置
        session-stat-max-count: 1000
        # 你可以配置principalSessionName，使得druid能够知道当前的session的用户是谁
        # 根据需要，把其中的xxx.user修改为你user信息保存在session中的sessionName。
        # 注意：如果你session中保存的是非string类型的对象，需要重载toString方法。
        # principal-session-name:
        # 如果你的user信息保存在cookie中，你可以配置principalCookieName，使得druid知道当前的user是谁
        # 根据需要，把其中的xxx.user修改为你user信息保存在cookie中的cookieName
        # principal-cookie-name:
        # 配置profileEnable能够监控单个url调用的sql列表。
        profile-enable: true

      # 监控配置 StatViewServlet 说明请参考Druid Wiki，配置_StatViewServlet配置
      stat-view-servlet:
        # [true] 是否启用StatViewServlet
        enabled: true
        # 根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/index.html
        url-pattern: /druid/*
        # 允许清空统计数据
        # 在StatViewSerlvet输出的html页面中，有一个功能是Reset All，执行这个操作之后，会导致所有计数器清零，重新计数。
        # 你可以通过配置参数关闭它。
        reset-enable: true
        # 用户名
        login-username: root
        # 密码
        login-password: 123123
        # 白名单
        # 如果allow没有配置或者为空，则允许所有访问
        # allow: 128.242.127.1/24,128.242.128.1
        # 黑名单
        # deny优先于allow，如果在deny列表中，就算在allow列表中，也会被拒绝。
        # deny: 128.242.127.4

#设置mybatis
mybatis:
  #  type-aliases-package: com.bcdbook.data.mapper.model
  # 指定 mapping 文件的位置
  mapper-locations: classpath:mapper/*/*.xml
  configuration:
    #开启驼峰命名法的匹配
    mapUnderscoreToCamelCase: true

logging:
  level:
    com.bcdbook.security.demo.mapper: trace

#mappers 多个接口时逗号隔开
#mapper.mappers=tk.mybatis.mapper.common.Mapper
mapper:
  mappers: com.bcdbook.framework.base.mapper.BaseMapper
  not-empty: false
  identity: MYSQL
  style: camelhump
  # 开启枚举作为简单数据类型处理的配置
  # 若不开启此配置, 枚举类型则无法映射
  enum-as-simple-type: true

#pagehelper
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql