easy-spring:
  # mysql 数据库的配置
  mysql:
    server-host: localhost
    port: 3306
    database: easy_spring_security_demo
    username: root
    password: 123123
  # Redis 数据库的配置
  redis:
    server-host: localhost
    port: 6379
    passowrd: 123123
  # 自己封装的 jar 中可配置的参数
  framework:
    base:
      page:
        # 每页最大显示数量
        max-page-size: 1000
        # 默认每页显示的数量
        default-page-size: 10
        # 默认的页码
        default-page-number: 1
    common:
      # 全局唯一 id 的配置
      snowflake:
        # 机器码(0~31)
        worker-id: 1
        # 数据中心码(0~31)
        data-center-id: 1
      # 异常信息相关的配置
      exception:
        # 错误页面
        error-page: 500
        # 错误信息
        exception-name: exception

  # 安全配置的内容
  security:
    # 浏览器环境配置项，参见 BrowserProperties
    browser:
      # session 管理相关配置，参见 SessionProperties
      session:
        # 同一个用户在系统中的最大 session 数，默认 1
        maximum-sessions: 1
        # 达到最大 session 时是否阻止新的登录请求，默认为 false，不阻止，
        # 新的登录会将老的登录失效掉
        max-sessions-prevents-login: false
        # session 失效时跳转的地址
        session-invalid-url: /session-invalid.html
      # 登录页面
      # sign-in-page: /demo-signIn.html
      # 退出成功时跳转的 url，如果配置了，则跳到指定的url，
      # 如果没配置，则返回 json 数据。
      sign-out-url: /demo-logout.html
      # 社交登录，如果需要用户注册，跳转的页面
      sign-up-url: /demo-signUp.html
      # 登录成功/失败后返回的数据类型
      sign-in-response-type: REDIRECT
      # '记住我'功能的有效时间，默认 1 周
      remember-me-seconds: 294000
      # 登录成功后跳转的地址，如果设置了此属性，则登录成功后总是会跳到这个地址上。
      #	只在 signInResponseType 为 REDIRECT 时生效
      sing-in-success-url: /manage.html
    # 验证码配置
    code:
      # 图片验证码配置项，参见 ImageCodeProperties
      image:
        # 验证码长度
        length: 4
        # 验证码图片宽度
        width: 100
        # 验证码图片高度
        height: 30
        # 过期时间
        expire-in: 30
        # 要拦截的 url，多个 url 用逗号隔开，例如: /ant,/pattern/*
        url: /user/*
      # 短信验证码配置项，参见 SmsCodeProperties
      sms:
        # 验证码长度
        length: 6
        # 过期时间
        expire-in: 60
        # 要拦截的 url，多个 url 用逗号隔开，例如: /ant,/pattern/*
        url: /user/*
    # 社交登录配置
    social:
      # 社交登录功能拦截的url, 默认: /auth, 参见 SocialProperties
      filterProcessesUrl: /qqLogin
      # QQ登录配置，参见 QQProperties
      qq:
        # APP 的识别码
        app-id: 100550231
        # APP 的密码
        app-secret: 69b6ab57b22f3c2fe6a6149274e3295e
        # 第三方 id，用来决定发起第三方登录的 url，默认是 qq。
        provider-id: callback.do
      # 微信登录配置，参见 WeChatProperties
      we-chat:
        # APP 的识别码
        app-id: wxd99431bbff8305a0
        # APP 的密码
        app-secret: 60f78681d063590a469f1b297feff3c4
        # 第三方 id，用来决定发起第三方登录的 url，默认是 qq。
        provider-id: wechat
      # 认证服务器注册的第三方应用配置项，参见OAuth2ClientProperties
      oauth2:
        # OAuth2 认证服务器的 tokenStore 的类型，可选值为 redis 和 jwt，值为 jwt 时发出的 token 为 jwt
        token-store: redis
        # 使用 jwt 时为 token 签名的秘钥
        jwt-signing-key: imooc
        # 认证服务器注册的第三方应用配置项
        clients[0]:
          # 第三方应用 appId
          clientId: imooc
          # 第三方应用 appSecret
          clientSecret: imoocsecret
          # 针对此应用发出的 token 的有效时间
          accessTokenValidateSeconds: 3600
        clients[1]:
          clientId: test
          clientSecret: test